홈 디렉토리 : 사용자(계정)의 디폴트 디렉토리
                   해당 계정으로 접속하면 가장 처음 위치하게 되는 디렉토리


# 디렉토리 이동 : 디렉토리의 처음부터 시작하는 위치 전달
cd 디렉토리경로

** 디렉토리경로
1. 절대 경로 : 최상위 디렉토리(/)로 부터 시작하는 전체 위치
2. 상대 경로 : 현재 위치한 디렉토리 기준으로 이동하고자 하는 디렉토리를 표현한 위치


[ 연습 문제 ] 
1. linux_ex/ch2/test1 디렉토리로 이동
cd /home/kic/linux_ex/ch2/test1   # 절대
cd linux_ex/ch2/test1                  # 상대

2. 위 디렉토리에서 linux_ex/ch3 디렉토리로 이동
cd /home/kic/linux_ex/ch3           # 절대
cd ../../ch3                                # 상대

3. 위 디렉토리에서 linux_ex/ch2/test3 으로 이동
cd /home/kic/linux_ex/ch2/test3   # 절대
cd ../ch2/test3                           # 상대


# 디렉토리와 관련된 특수 기호
/  : root 디렉토리(최상위 디렉토리)
/  : 디렉토리 구분 기호
~ : 홈 디렉토리
.. : 상위 디렉토리
.  : 현재 디렉토리

# 리눅스/유닉스의 명령어의 형태
명령어 [옵션] [인자]

ls       : 현재 디렉토리 하위 목록
ls -F   : 현재 디렉토리 하위 목록(디렉토리 구분)
ls /     : 입력된 디렉토리 하위 목록
ls -F / : 입력된 디렉토리 하위 목록(디렉토리 구분)


find_func(module_name, func_name)   # R, Pytho, SQL 등의 명령어 처리 방식(함수 형태)
find_func module_name  func_name   # 리눅스/유닉스의 명령어 처리 방식(명령어 형태)


[ 디렉토리와 파일 명령어 ] 

1. pwd : 현재 디렉토리(절대경로)를 출력

2. cd : 디렉토리 이동
[문법]
cd [ 디렉토리 위치/이름 ]


3. ls : 디렉토리나 파일의 목록(정보) 출력

[문법]
ls [옵션] [디렉토리명/파일명]

[옵션]
-a : 숨김 파일(.으로 시작하는) 모두 출력
-l  :  상세 정보 출력(파일 소유자, 크기, 권한, 수정날짜 등)
-R : 하위 디렉토리 정보 모두 출력
-d : 입력한 디렉토리 자체 정보 출력
-F : 디렉토리인지 파일인지 구분


4. mkdir : 디렉토리 생성
[문법]
mkdir [옵션] [디렉토리명]

[옵션] 
-p : 중간 디렉토리까지 생성

5. rmdir : 디렉토리 삭제

[문법]
rmdir [옵션] [디렉토리명]

[옵션] 
-p : 중간 디렉토리까지 삭제(비어져있을 경우만)

[ 연습 문제 ] 

1. 현재 위치를 확인한다. 홈 디렉터리가 아니면 홈 디렉터리로 이동한다.
2. 실습을 위한 기본 디렉터리를 만든다. 먼저 홈 디렉터리에 linux_ex 디렉터리를 만들고 그 디렉터리로 이동한다.
앞으로 모든 실습은 이 디렉터리 아래에서 한다.
3. ch2 디렉터리를 만들고 그 디렉터리로 이동하여 현재 위치를 확인한다.
4. one, two, three 디렉터리를 동시에 만든다.
5. one 디렉터리 아래에 tmp/test 디렉터리를 만든다. 중간 경로인 tmp 디렉터리가 자동 생성되도록 한다.
6. two, three 디렉터리를 동시에 삭제한다.
7. 실습을 마치고 홈 디렉터리로 이동한다.
	cd ~
	mkdir linux_ex
	cd ./linux_ex
	mkdir ch2
	cd ./ch2
	pwd
	mkdir one two three
	cd ./one
	mkdir -p tmp/test
	cd ../
	rmdir two three
	cd ~

